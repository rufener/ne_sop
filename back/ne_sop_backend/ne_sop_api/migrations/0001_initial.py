# Generated by Django 4.2.8 on 2023-12-27 15:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ne_sop_api.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Entity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "description",
                    models.CharField(blank=True, default="", max_length=256),
                ),
                ("street", models.CharField(blank=True, default="", max_length=256)),
                ("city", models.CharField(blank=True, default="", max_length=256)),
                ("postalcode", models.CharField(blank=True, default="", max_length=25)),
                ("region", models.CharField(blank=True, default="", max_length=256)),
                ("country", models.CharField(blank=True, default="", max_length=100)),
                ("website", models.URLField(blank=True, default="", max_length=512)),
                ("email", models.EmailField(blank=True, default="", max_length=256)),
                ("telephone", models.CharField(blank=True, default="", max_length=256)),
                ("valid", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EntityType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EventType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ItemStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=50)),
                ("color", models.CharField(blank=True, default="", max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ItemType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=50)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(blank=True, default="", max_length=100)),
                ("valid", models.BooleanField(default=True)),
                ("relpath", models.CharField(default=None, max_length=400)),
                ("item_types", models.ManyToManyField(to="ne_sop_api.itemtype")),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("number", models.CharField(blank=True, default="", max_length=30)),
                ("title", models.CharField(blank=True, default="", max_length=512)),
                (
                    "description",
                    models.TextField(blank=True, default="", max_length=600),
                ),
                ("urgent", models.BooleanField(default=False)),
                ("writtenresponse", models.BooleanField(default=False)),
                ("oralresponse", models.BooleanField(default=False)),
                ("startdate", models.DateField(null=True)),
                ("enddate", models.DateField(null=True)),
                ("autonotify", models.BooleanField(default=False)),
                ("valid", models.BooleanField(default=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="author",
                        to="ne_sop_api.entity",
                    ),
                ),
                (
                    "lead",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lead",
                        to="ne_sop_api.entity",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ne_sop_api.itemstatus",
                    ),
                ),
                (
                    "support",
                    models.ManyToManyField(
                        blank=True, related_name="item", to="ne_sop_api.entity"
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ne_sop_api.itemtype",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateField()),
                ("time", models.TimeField(null=True)),
                (
                    "description",
                    models.CharField(blank=True, default="", max_length=500),
                ),
                ("valid", models.BooleanField(default=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="ne_sop_api.item",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ne_sop_api.eventtype",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.AddField(
            model_name="entity",
            name="type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="ne_sop_api.entitytype",
            ),
        ),
        migrations.AddField(
            model_name="entity",
            name="users",
            field=models.ManyToManyField(
                blank=True, related_name="entities", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("note", models.CharField(blank=True, default="", max_length=500)),
                ("filename", models.CharField(default=None, max_length=200)),
                ("version", models.PositiveIntegerField(default=None)),
                ("size", models.PositiveIntegerField(default=0)),
                (
                    "file",
                    models.FileField(upload_to=ne_sop_api.utils.Utils.get_upload_path),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ne_sop_api.entity",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="ne_sop_api.item",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ne_sop_api.template",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
    ]
